/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "../asn1/EUTRA-RRC-Definitions.asn"
 * 	`asn1c -gen-PER -fcompound-names -fnative-types`
 */

#ifndef	_MeasObjectEUTRA_H_
#define	_MeasObjectEUTRA_H_


#include <rf_phreaker/lte_rrc_asn_library/asn_application.h>

/* Including external dependencies */
#include "rf_phreaker/lte_rrc_asn_library/ARFCN-ValueEUTRA.h"
#include "rf_phreaker/lte_rrc_asn_library/AllowedMeasBandwidth.h"
#include "rf_phreaker/lte_rrc_asn_library/PresenceAntennaPort1.h"
#include "rf_phreaker/lte_rrc_asn_library/NeighCellConfig.h"
#include "rf_phreaker/lte_rrc_asn_library/Q-OffsetRange.h"
#include "rf_phreaker/lte_rrc_asn_library/PhysCellId.h"
#include "rf_phreaker/lte_rrc_asn_library/MeasCycleSCell-r10.h"
#include <rf_phreaker/lte_rrc_asn_library/BOOLEAN.h>
#include <rf_phreaker/lte_rrc_asn_library/constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct CellIndexList;
struct CellsToAddModList;
struct BlackCellsToAddModList;
struct MeasSubframePatternConfigNeigh_r10;

/* MeasObjectEUTRA */
typedef struct MeasObjectEUTRA {
	ARFCN_ValueEUTRA_t	 carrierFreq;
	AllowedMeasBandwidth_t	 allowedMeasBandwidth;
	PresenceAntennaPort1_t	 presenceAntennaPort1;
	NeighCellConfig_t	 neighCellConfig;
	Q_OffsetRange_t	*offsetFreq	/* DEFAULT 15 */;
	struct CellIndexList	*cellsToRemoveList	/* OPTIONAL */;
	struct CellsToAddModList	*cellsToAddModList	/* OPTIONAL */;
	struct CellIndexList	*blackCellsToRemoveList	/* OPTIONAL */;
	struct BlackCellsToAddModList	*blackCellsToAddModList	/* OPTIONAL */;
	PhysCellId_t	*cellForWhichToReportCGI	/* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	MeasCycleSCell_r10_t	*measCycleSCell_r10	/* OPTIONAL */;
	struct MeasSubframePatternConfigNeigh_r10	*measSubframePatternConfigNeigh_r10	/* OPTIONAL */;
	BOOLEAN_t	*widebandRSRQ_Meas_r11	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasObjectEUTRA_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_MeasObjectEUTRA;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "rf_phreaker/lte_rrc_asn_library/CellIndexList.h"
#include "rf_phreaker/lte_rrc_asn_library/CellsToAddModList.h"
#include "rf_phreaker/lte_rrc_asn_library/BlackCellsToAddModList.h"
#include "rf_phreaker/lte_rrc_asn_library/MeasSubframePatternConfigNeigh-r10.h"

#endif	/* _MeasObjectEUTRA_H_ */
#include <rf_phreaker/lte_rrc_asn_library/asn_internal.h>
