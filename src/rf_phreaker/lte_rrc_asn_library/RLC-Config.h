/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "EUTRA-RRC-Definitions.asn"
 * 	`asn1c -fcompound-names -pdu=all`
 */

#ifndef	_RLC_Config_H_
#define	_RLC_Config_H_


#include <rf_phreaker/lte_rrc_asn_library/asn_application.h>

/* Including external dependencies */
#include "rf_phreaker/lte_rrc_asn_library/UL-AM-RLC.h"
#include "rf_phreaker/lte_rrc_asn_library/DL-AM-RLC.h"
#include <rf_phreaker/lte_rrc_asn_library/constr_SEQUENCE.h>
#include "rf_phreaker/lte_rrc_asn_library/UL-UM-RLC.h"
#include "rf_phreaker/lte_rrc_asn_library/DL-UM-RLC.h"
#include <rf_phreaker/lte_rrc_asn_library/constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum RLC_Config_PR {
	RLC_Config_PR_NOTHING,	/* No components present */
	RLC_Config_PR_am,
	RLC_Config_PR_um_Bi_Directional,
	RLC_Config_PR_um_Uni_Directional_UL,
	RLC_Config_PR_um_Uni_Directional_DL,
	/* Extensions may appear below */
	
} RLC_Config_PR;

/* RLC-Config */
typedef struct RLC_Config {
	RLC_Config_PR present;
	union RLC_Config_u {
		struct RLC_Config__am {
			UL_AM_RLC_t	 ul_AM_RLC;
			DL_AM_RLC_t	 dl_AM_RLC;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} am;
		struct RLC_Config__um_Bi_Directional {
			UL_UM_RLC_t	 ul_UM_RLC;
			DL_UM_RLC_t	 dl_UM_RLC;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} um_Bi_Directional;
		struct RLC_Config__um_Uni_Directional_UL {
			UL_UM_RLC_t	 ul_UM_RLC;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} um_Uni_Directional_UL;
		struct RLC_Config__um_Uni_Directional_DL {
			DL_UM_RLC_t	 dl_UM_RLC;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} um_Uni_Directional_DL;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} RLC_Config_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_RLC_Config;

#ifdef __cplusplus
}
#endif

#endif	/* _RLC_Config_H_ */
#include <rf_phreaker/lte_rrc_asn_library/asn_internal.h>
