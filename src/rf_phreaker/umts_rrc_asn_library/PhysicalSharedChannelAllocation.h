/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "PDU-definitions"
 * 	found in "rcc.txt"
 * 	`asn1c -S/skeletons -fnative-types -fcompound-names`
 */

#ifndef	_PhysicalSharedChannelAllocation_H_
#define	_PhysicalSharedChannelAllocation_H_


#include <rf_phreaker/umts_rrc_asn_library/asn_application.h>

/* Including external dependencies */
#include "rf_phreaker/umts_rrc_asn_library/PhysicalSharedChannelAllocation-r3-IEs.h"
#include <rf_phreaker/umts_rrc_asn_library/BIT_STRING.h>
#include <rf_phreaker/umts_rrc_asn_library/constr_SEQUENCE.h>
#include "rf_phreaker/umts_rrc_asn_library/DSCH-RNTI.h"
#include "rf_phreaker/umts_rrc_asn_library/RRC-TransactionIdentifier.h"
#include "rf_phreaker/umts_rrc_asn_library/PhysicalSharedChannelAllocation-r4-IEs.h"
#include "rf_phreaker/umts_rrc_asn_library/PhysicalSharedChannelAllocation-v690ext-IEs.h"
#include "rf_phreaker/umts_rrc_asn_library/PhysicalSharedChannelAllocation-v770ext-IEs.h"
#include <rf_phreaker/umts_rrc_asn_library/constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum PhysicalSharedChannelAllocation_PR {
	PhysicalSharedChannelAllocation_PR_NOTHING,	/* No components present */
	PhysicalSharedChannelAllocation_PR_r3,
	PhysicalSharedChannelAllocation_PR_later_than_r3
} PhysicalSharedChannelAllocation_PR;
typedef enum PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions_PR {
	PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions_PR_NOTHING,	/* No components present */
	PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions_PR_r4,
	PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions_PR_criticalExtensions
} PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions_PR;

/* PhysicalSharedChannelAllocation */
typedef struct PhysicalSharedChannelAllocation {
	PhysicalSharedChannelAllocation_PR present;
	union PhysicalSharedChannelAllocation_u {
		struct PhysicalSharedChannelAllocation__r3 {
			PhysicalSharedChannelAllocation_r3_IEs_t	 physicalSharedChannelAllocation_r3;
			struct PhysicalSharedChannelAllocation__r3__laterNonCriticalExtensions {
				BIT_STRING_t	*physicalSharedChannelAllocation_r3_add_ext	/* OPTIONAL */;
				struct PhysicalSharedChannelAllocation__r3__laterNonCriticalExtensions__nonCriticalExtensions {
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} *nonCriticalExtensions;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *laterNonCriticalExtensions;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} r3;
		struct PhysicalSharedChannelAllocation__later_than_r3 {
			DSCH_RNTI_t	*dsch_RNTI	/* OPTIONAL */;
			RRC_TransactionIdentifier_t	 rrc_TransactionIdentifier;
			struct PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions {
				PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions_PR present;
				union PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions_u {
					struct PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions__r4 {
						PhysicalSharedChannelAllocation_r4_IEs_t	 physicalSharedChannelAllocation_r4;
						struct PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions__r4__v4d0NonCriticalExtensions {
							BIT_STRING_t	*physicalSharedChannelAllocation_r4_add_ext	/* OPTIONAL */;
							struct PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions__r4__v4d0NonCriticalExtensions__v690NonCriticalExtensions {
								PhysicalSharedChannelAllocation_v690ext_IEs_t	 physicalSharedChannelAllocation_v690ext;
								struct PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions__r4__v4d0NonCriticalExtensions__v690NonCriticalExtensions__v770NonCriticalExtensions {
									PhysicalSharedChannelAllocation_v770ext_IEs_t	 physicalSharedChannelAllocation_v770ext;
									struct PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions__r4__v4d0NonCriticalExtensions__v690NonCriticalExtensions__v770NonCriticalExtensions__nonCriticalExtensions {
										
										/* Context for parsing across buffer boundaries */
										asn_struct_ctx_t _asn_ctx;
									} *nonCriticalExtensions;
									
									/* Context for parsing across buffer boundaries */
									asn_struct_ctx_t _asn_ctx;
								} *v770NonCriticalExtensions;
								
								/* Context for parsing across buffer boundaries */
								asn_struct_ctx_t _asn_ctx;
							} *v690NonCriticalExtensions;
							
							/* Context for parsing across buffer boundaries */
							asn_struct_ctx_t _asn_ctx;
						} *v4d0NonCriticalExtensions;
						
						/* Context for parsing across buffer boundaries */
						asn_struct_ctx_t _asn_ctx;
					} r4;
					struct PhysicalSharedChannelAllocation__later_than_r3__criticalExtensions__criticalExtensions {
						
						/* Context for parsing across buffer boundaries */
						asn_struct_ctx_t _asn_ctx;
					} criticalExtensions;
				} choice;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} criticalExtensions;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} later_than_r3;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} PhysicalSharedChannelAllocation_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_PhysicalSharedChannelAllocation;

#ifdef __cplusplus
}
#endif

#endif	/* _PhysicalSharedChannelAllocation_H_ */
