/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "rcc.txt"
 * 	`asn1c -S/skeletons -fnative-types -fcompound-names`
 */

#ifndef	_HARQ_Info_r7_H_
#define	_HARQ_Info_r7_H_


#include <rf_phreaker/umts_rrc_asn_library/asn_application.h>

/* Including external dependencies */
#include <rf_phreaker/umts_rrc_asn_library/NativeEnumerated.h>
#include <rf_phreaker/umts_rrc_asn_library/NULL.h>
#include "rf_phreaker/umts_rrc_asn_library/HARQMemorySize.h"
#include <rf_phreaker/umts_rrc_asn_library/asn_SEQUENCE_OF.h>
#include <rf_phreaker/umts_rrc_asn_library/constr_SEQUENCE_OF.h>
#include <rf_phreaker/umts_rrc_asn_library/constr_SEQUENCE.h>
#include <rf_phreaker/umts_rrc_asn_library/constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum HARQ_Info_r7__numberOfProcesses {
	HARQ_Info_r7__numberOfProcesses_n1	= 0,
	HARQ_Info_r7__numberOfProcesses_n2	= 1,
	HARQ_Info_r7__numberOfProcesses_n3	= 2,
	HARQ_Info_r7__numberOfProcesses_n4	= 3,
	HARQ_Info_r7__numberOfProcesses_n5	= 4,
	HARQ_Info_r7__numberOfProcesses_n6	= 5,
	HARQ_Info_r7__numberOfProcesses_n7	= 6,
	HARQ_Info_r7__numberOfProcesses_n8	= 7,
	HARQ_Info_r7__numberOfProcesses_n12	= 8,
	HARQ_Info_r7__numberOfProcesses_n14	= 9,
	HARQ_Info_r7__numberOfProcesses_n16	= 10
} e_HARQ_Info_r7__numberOfProcesses;
typedef enum HARQ_Info_r7__memoryPartitioning_PR {
	HARQ_Info_r7__memoryPartitioning_PR_NOTHING,	/* No components present */
	HARQ_Info_r7__memoryPartitioning_PR_implicit,
	HARQ_Info_r7__memoryPartitioning_PR_explicit
} HARQ_Info_r7__memoryPartitioning_PR;

/* HARQ-Info-r7 */
typedef struct HARQ_Info_r7 {
	long	 numberOfProcesses;
	struct HARQ_Info_r7__memoryPartitioning {
		HARQ_Info_r7__memoryPartitioning_PR present;
		union HARQ_Info_r7__memoryPartitioning_u {
			NULL_t	 implicit;
			struct HARQ_Info_r7__memoryPartitioning__explicit {
				struct HARQ_Info_r7__memoryPartitioning__explicit__memorySize {
					A_SEQUENCE_OF(HARQMemorySize_t) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} memorySize;
				struct HARQ_Info_r7__memoryPartitioning__explicit__additionalMemorySizesForMIMO {
					A_SEQUENCE_OF(HARQMemorySize_t) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} *additionalMemorySizesForMIMO;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} explicit_; // Changed so we can compile on microsoft.
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} memoryPartitioning;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} HARQ_Info_r7_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_numberOfProcesses_2;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_HARQ_Info_r7;

#ifdef __cplusplus
}
#endif

#endif	/* _HARQ_Info_r7_H_ */
