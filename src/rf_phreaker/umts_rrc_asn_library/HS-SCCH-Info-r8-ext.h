/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "rcc.txt"
 * 	`asn1c -S/skeletons -fnative-types -fcompound-names`
 */

#ifndef	_HS_SCCH_Info_r8_ext_H_
#define	_HS_SCCH_Info_r8_ext_H_


#include <rf_phreaker/umts_rrc_asn_library/asn_application.h>

/* Including external dependencies */
#include <rf_phreaker/umts_rrc_asn_library/NULL.h>
#include <rf_phreaker/umts_rrc_asn_library/NativeEnumerated.h>
#include <rf_phreaker/umts_rrc_asn_library/constr_SEQUENCE.h>
#include <rf_phreaker/umts_rrc_asn_library/constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum HS_SCCH_Info_r8_ext__modeSpecificInfo_PR {
	HS_SCCH_Info_r8_ext__modeSpecificInfo_PR_NOTHING,	/* No components present */
	HS_SCCH_Info_r8_ext__modeSpecificInfo_PR_fdd,
	HS_SCCH_Info_r8_ext__modeSpecificInfo_PR_tdd
} HS_SCCH_Info_r8_ext__modeSpecificInfo_PR;
typedef enum HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd_PR {
	HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd_PR_NOTHING,	/* No components present */
	HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd_PR_tdd384,
	HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd_PR_tdd768,
	HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd_PR_tdd128
} HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd_PR;
typedef enum HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd__tdd128__hS_SCCH_tpc_step_size {
	HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd__tdd128__hS_SCCH_tpc_step_size_s1	= 0,
	HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd__tdd128__hS_SCCH_tpc_step_size_s2	= 1,
	HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd__tdd128__hS_SCCH_tpc_step_size_s3	= 2,
	HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd__tdd128__hS_SCCH_tpc_step_size_spare1	= 3
} e_HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd__tdd128__hS_SCCH_tpc_step_size;

/* HS-SCCH-Info-r8-ext */
typedef struct HS_SCCH_Info_r8_ext {
	struct HS_SCCH_Info_r8_ext__modeSpecificInfo {
		HS_SCCH_Info_r8_ext__modeSpecificInfo_PR present;
		union HS_SCCH_Info_r8_ext__modeSpecificInfo_u {
			NULL_t	 fdd;
			struct HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd {
				HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd_PR present;
				union HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd_u {
					NULL_t	 tdd384;
					NULL_t	 tdd768;
					struct HS_SCCH_Info_r8_ext__modeSpecificInfo__tdd__tdd128 {
						long	*hS_SCCH_tpc_step_size	/* OPTIONAL */;
						
						/* Context for parsing across buffer boundaries */
						asn_struct_ctx_t _asn_ctx;
					} tdd128;
				} choice;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} modeSpecificInfo;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} HS_SCCH_Info_r8_ext_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_hS_SCCH_tpc_step_size_8;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_HS_SCCH_Info_r8_ext;

#ifdef __cplusplus
}
#endif

#endif	/* _HS_SCCH_Info_r8_ext_H_ */
