/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "Class-definitions"
 * 	found in "rcc.txt"
 * 	`asn1c -S/skeletons -fnative-types -fcompound-names`
 */

#ifndef	_DL_CCCH_MessageType_H_
#define	_DL_CCCH_MessageType_H_


#include <rf_phreaker/umts_rrc_asn_library/asn_application.h>

/* Including external dependencies */
#include "rf_phreaker/umts_rrc_asn_library/CellUpdateConfirm-CCCH.h"
#include "rf_phreaker/umts_rrc_asn_library/RRCConnectionReject.h"
#include "rf_phreaker/umts_rrc_asn_library/RRCConnectionRelease-CCCH.h"
#include "rf_phreaker/umts_rrc_asn_library/RRCConnectionSetup.h"
#include "rf_phreaker/umts_rrc_asn_library/URAUpdateConfirm-CCCH.h"
#include "rf_phreaker/umts_rrc_asn_library/ETWSPrimaryNotificationWithSecurity.h"
#include <rf_phreaker/umts_rrc_asn_library/NULL.h>
#include <rf_phreaker/umts_rrc_asn_library/constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum DL_CCCH_MessageType_PR {
	DL_CCCH_MessageType_PR_NOTHING,	/* No components present */
	DL_CCCH_MessageType_PR_cellUpdateConfirm,
	DL_CCCH_MessageType_PR_rrcConnectionReject,
	DL_CCCH_MessageType_PR_rrcConnectionRelease,
	DL_CCCH_MessageType_PR_rrcConnectionSetup,
	DL_CCCH_MessageType_PR_uraUpdateConfirm,
	DL_CCCH_MessageType_PR_etwsPrimaryNotificationWithSecurity,
	DL_CCCH_MessageType_PR_spare2,
	DL_CCCH_MessageType_PR_spare1
} DL_CCCH_MessageType_PR;

/* DL-CCCH-MessageType */
typedef struct DL_CCCH_MessageType {
	DL_CCCH_MessageType_PR present;
	union DL_CCCH_MessageType_u {
		CellUpdateConfirm_CCCH_t	 cellUpdateConfirm;
		RRCConnectionReject_t	 rrcConnectionReject;
		RRCConnectionRelease_CCCH_t	 rrcConnectionRelease;
		RRCConnectionSetup_t	 rrcConnectionSetup;
		URAUpdateConfirm_CCCH_t	 uraUpdateConfirm;
		ETWSPrimaryNotificationWithSecurity_t	 etwsPrimaryNotificationWithSecurity;
		NULL_t	 spare2;
		NULL_t	 spare1;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} DL_CCCH_MessageType_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_DL_CCCH_MessageType;

#ifdef __cplusplus
}
#endif

#endif	/* _DL_CCCH_MessageType_H_ */
